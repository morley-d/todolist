version: "3.9"

services:
  front:
    image: sermalenk/skypro-front:lesson-38
    ports:
      - 8038:80
    depends_on:
      - api
  api:
    image: morley007/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    volumes:
      - ./.env:/app/.env
  bot:
    image: morley007/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./.env:/app/.env
    command: python manage.py runbot
  migrations:
    image: morley007/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./.env:/app/.env
    command: python manage.py migrate
    environment:
      DEBUG: $DEBUG
      SECRET_KEY: $SECRET_KEY
      ALLOWED_HOSTS: $ALLOWED_HOSTS
#      SOCIAL_AUTH_VK_OAUTH2_KEY: $SOCIAL_AUTH_VK_OAUTH2_KEY
#      SOCIAL_AUTH_VK_OAUTH2_SECRET: $SOCIAL_AUTH_VK_OAUTH2_SECRET
      DATABASE_URL: $DATABASE_URL
#      BOT_TOKEN: $BOT_TOKEN
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $DB_NAME
      POSTGRES_USER: $DB_USER
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
