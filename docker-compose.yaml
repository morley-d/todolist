version: "3.9"

services:
  front:
    image: sermalenk/skypro-front:lesson-38
    ports:
      - 8080:80
    depends_on:
      - api
  api:
    build: .
    depends_on:
      db:
        condition: service_healthy
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_HOST: db
    ports:
      - "8000:8000"
    volumes:
      - ./.env:/app/.env
  migrations:
    build: .
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./.env:/app/.env
    command: python manage.py migrate
  db:
    image: postgres:latest
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    restart: always
    ports:
      - 5432:5432
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  pg_data: