#version: '3.8'
#
#services:
#  db:
#    image: postgres:12.4-alpine
#    volumes:
#      - postgres_data:/var/lib/postgresql/data
#    environment:
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: 12345
#      POSTGRES_DB: todolist
#      POSTGRES_HOST: localhost
#      POSTGRES_PORT: 5432
#    restart: always
#    ports:
#    - "5432:5432"
#
#volumes:
#  postgres_data:
#

version: "3.9"

services:
  front:
    image: sermalenk/skypro-front:lesson-35
    restart: always
    ports:
      - 8080:80
    depends_on:
      - api
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./src/static/:/opt/static/
  api:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_HOST: postgres
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./todolist/:/app
  migrations:
    build: .
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./.env:/app/.env
    command: python manage.py migrate
  db:
    image: postgres:latest
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    restart: always
    ports:
      - 5432:5432
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
